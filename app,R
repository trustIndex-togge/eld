
library(tidyverse)
library(shiny)
library(metafor)

data <- read_csv("mock_data_eld_shiny_pilot - mock_data.csv")

effects <- escalc("SMD", m1i = m1i, sd1i = sd1i, n1i = N1i,
                  m2i = m2i, sd2i = sd2i, n2i = N2i,
                  data = data)


############### user interface ####################
ui <- fluidPage(
    # Application title
    titlePanel("Meta-analysis"),
    
    # Sidebar with a choices input dropdown
    sidebarLayout(
        sidebarPanel(
            selectInput(inputId =  "design",
                        label = "Select design",
                        choices = c("All", unique(effects$study_design))),
            selectInput(inputId = "grade",
                        label = "Select grade",
                        choices = c("All", unique(effects$Grade)))),
        mainPanel(plotOutput('Plot'))),
    
    # meta-analysis forest plot
    
)


############### server ############################

server <- function(input, output) {
    

    effectsinput <- reactive({                                                     
        effects %>% filter(study_design == input$design)
    }) ## add reactive dataframe based on input
    
    ma <- reactive({rma.uni(yi, vi, data = effectsinput(), method = "REML", slab = short_cite)
    
    }) ## create reactive ma dependent on input
 
    
    output$Plot <- renderPlot({
        
        
        
        forest(ma(), xlim=c(-16,6), ilab=cbind(N1i, N2i), ilab.xpos=c(-8, -6),
               header="Author(s) and Year", mlab="")
        
    }) ## added ma() in order for r to understand its an reactive frame
    
    
}
​
​
​
################## run the app ####################
shinyApp(ui, server)
